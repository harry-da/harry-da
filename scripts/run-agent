#!/bin/bash
set -e

# Script to run opencode agents
# Usage: ./run-agent <agent-id>

if [ -z "$1" ]; then
  echo "Error: Agent ID is required"
  echo "Usage: $0 <agent-id>"
  exit 1
fi

JOB_ID="$1"
AGENT_DIR="agents/${JOB_ID}"
LOGS_DIR="${AGENT_DIR}/logs"
AGENT_FILE="${AGENT_DIR}/agent.md"
TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
OUTPUT_FILE="${LOGS_DIR}/${TIMESTAMP}.yml"
WORKDIR=$(mktemp -d)

# Store absolute path to output file for use from work directory
REPO_DIR="$(pwd)"
OUTPUT_FILE_ABS="${REPO_DIR}/${OUTPUT_FILE}"

# Check if agent file exists
if [ ! -f "$AGENT_FILE" ]; then
  echo "Error: Agent file not found at $AGENT_FILE"
  exit 1
fi

# Create agent and logs directories if they don't exist
mkdir -p "$AGENT_DIR" "$LOGS_DIR"

echo "============================================"
echo "Running agent: ${JOB_ID}"
echo "Agent file: ${AGENT_FILE}"
echo "Output file: ${OUTPUT_FILE}"
echo "Work directory: ${WORKDIR}"
echo "============================================"
echo ""

# Copy agent file to opencode agent directory
mkdir -p ~/.config/opencode/agent
cp "$AGENT_FILE" ~/.config/opencode/agent/"${JOB_ID}.md"

echo "Copied agent to ~/.config/opencode/agent/${JOB_ID}.md"
echo ""

# Change to empty work directory and run opencode
# Copy only the agent.md file, excluding logs directory
cp "$AGENT_FILE" "$WORKDIR/"
cd "$WORKDIR"
echo "Running: opencode run @${JOB_ID} --model github-copilot/claude-sonnet-4 --format json"
echo ""

# Run opencode and convert JSON lines to YAML
TEMP_JSON=$(mktemp)
if opencode run "@${JOB_ID}" --model github-copilot/claude-sonnet-4 --format json > "${TEMP_JSON}" 2>&1; then
  echo "OpenCode execution completed successfully"
  # Convert line-delimited JSON to YAML if yq is available, otherwise keep as JSON
  if command -v yq >/dev/null 2>&1; then
    echo "Converting JSON lines to YAML..."
    # Process each line as a separate JSON object and convert to YAML
    {
      first=true
      while IFS= read -r line; do
        if [ -n "$line" ]; then
          # Filter out all sessionID fields recursively and other unnecessary IDs
          filtered_json=$(echo "$line" | yq eval '
            del(.sessionID) | 
            del(.part.sessionID) | 
            del(.part.id) |
            del(.text.sessionID) |
            del(.metadata.summary[]?.sessionID) |
            del(.metadata.summary[]?.id)
          ')
          if [ "$first" = true ]; then
            echo "- $(echo "$filtered_json" | yq eval -P '.' | sed '1s/^//' | sed '2,$s/^/  /')"
            first=false
          else
            echo "- $(echo "$filtered_json" | yq eval -P '.' | sed '1s/^//' | sed '2,$s/^/  /')"
          fi
        fi
      done < "${TEMP_JSON}"
    } > "${OUTPUT_FILE_ABS}"
  else
    echo "yq not found, keeping JSON format..."
    cp "${TEMP_JSON}" "${OUTPUT_FILE_ABS}"
  fi
else
  echo "OpenCode execution failed"
  cp "${TEMP_JSON}" "${OUTPUT_FILE_ABS}"
  cat "${OUTPUT_FILE_ABS}"
fi
rm -f "${TEMP_JSON}"

# Clean up work directory
cd -
rm -rf "$WORKDIR"

echo ""
echo "Agent completed!"
echo "Results saved to: $OUTPUT_FILE"

# Keep only the last 10 logs to avoid repository bloat
cd "$LOGS_DIR"
ls -t *.yml 2>/dev/null | tail -n +11 | xargs -r rm --
echo "Cleaned up old logs (keeping last 10)"
