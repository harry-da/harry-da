---
name: Cron Jobs

'on':
  schedule:
    # Daily summary at 9:00 AM UTC every day
    - cron: '0 9 * * *'
    # Weekly report at 10:00 AM UTC every Monday
    - cron: '0 10 * * 1'
  workflow_dispatch:
    inputs:
      job-id:
        description: 'Job ID to run (e.g., daily-summary, weekly-report)'
        required: true
        type: string

permissions:
  contents: write
  id-token: write

jobs:
  # Run scheduled jobs
  run-scheduled-job:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - job-id: daily-summary
            schedule: '0 9 * * *'
          - job-id: weekly-report
            schedule: '0 10 * * 1'
    steps:
      - name: Check if this job should run
        id: check
        run: |
          if [ "${{ github.event.schedule }}" = "${{ matrix.schedule }}" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout repository
        if: steps.check.outputs.should_run == 'true'
        uses: actions/checkout@v4

      - name: Setup home directory files
        if: steps.check.outputs.should_run == 'true'
        run: |
          echo '${{ secrets.HOME_TAR }}' | base64 -d | tar -xzf - -C ~

      - name: Run job script
        if: steps.check.outputs.should_run == 'true'
        run: |
          bash scripts/run-job.sh ${{ matrix.job-id }}

      - name: Extract prompt for opencode
        if: steps.check.outputs.should_run == 'true'
        id: extract-prompt
        run: |
          AGENT_FILE="jobs/${{ matrix.job-id }}/agent.md"
          # Extract prompt from agent.md (everything after "## Prompt")
          PROMPT=$(awk '/^## Prompt/,0' "$AGENT_FILE" | tail -n +2)
          echo "$PROMPT" > /tmp/prompt.txt
          echo "Prompt extracted for opencode"

      - name: Run opencode agent
        if: steps.check.outputs.should_run == 'true'
        uses: sst/opencode/github@latest
        env:
          TOKEN: ${{ secrets.GH_PAT }}
        with:
          model: github-copilot/claude-sonnet-4
          prompt-file: /tmp/prompt.txt

      - name: Commit and push results
        if: steps.check.outputs.should_run == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email \
            "github-actions[bot]@users.noreply.github.com"
          git add jobs/${{ matrix.job-id }}/results/
          TIMESTAMP=$(date -u +%Y-%m-%d)
          git commit -m \
            "Add ${{ matrix.job-id }} results - ${TIMESTAMP}" || \
            echo "No changes to commit"
          git push

  # Run manual job
  run-manual-job:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup home directory files
        run: |
          echo '${{ secrets.HOME_TAR }}' | base64 -d | tar -xzf - -C ~

      - name: Run job script
        run: |
          bash scripts/run-job.sh ${{ github.event.inputs.job-id }}

      - name: Extract prompt for opencode
        id: extract-prompt
        run: |
          AGENT_FILE="jobs/${{ github.event.inputs.job-id }}/agent.md"
          if [ ! -f "$AGENT_FILE" ]; then
            echo "Error: Agent file not found at $AGENT_FILE"
            exit 1
          fi
          # Extract prompt from agent.md (everything after "## Prompt")
          PROMPT=$(awk '/^## Prompt/,0' "$AGENT_FILE" | tail -n +2)
          echo "$PROMPT" > /tmp/prompt.txt
          echo "Prompt extracted for opencode"

      - name: Run opencode agent
        uses: sst/opencode/github@latest
        env:
          TOKEN: ${{ secrets.GH_PAT }}
        with:
          model: github-copilot/claude-sonnet-4
          prompt-file: /tmp/prompt.txt

      - name: Commit and push results
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email \
            "github-actions[bot]@users.noreply.github.com"
          git add jobs/${{ github.event.inputs.job-id }}/results/
          TIMESTAMP=$(date -u +%Y-%m-%d)
          git commit -m \
            "Add ${{ github.event.inputs.job-id }} results - ${TIMESTAMP}" \
            || echo "No changes to commit"
          git push
